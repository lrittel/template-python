{% raw %}
name: Packaging

on:
  push:

jobs:
  packaging:
    runs-on: ubuntu-latest
    env:
      UV_LINK_MODE: copy
    steps:
      - uses: actions/checkout@v4

      - uses: extractions/setup-just@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install

      - name: Build a package
        run: uv build

      # Upload an artifact
      - name: Upload the wheel/sdist as artifacts
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/*-*.tar.gz
            dist/*-*.whl

  release:
    needs: packaging
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        if: ${{ !env.ACT }}
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Get the tag
        if: ${{ !env.ACT }}
        uses: olegtarasov/get-tag@v2.1.4
        id: tagName
        with:
          tagRegex: 'v(?<version>[0-9]+\.[0-9]+\.[0-9]+)(?<suffix>.*)'

      # Create a release if a tag is pushed
      - name: Create a release
        if: ${{ !env.ACT }}
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          files: |
            dist/*-*.tar.gz
            dist/*-*.whl
          draft: true
          prerelease: ${{ steps.tagName.outputs.suffix != '' }}

  publish:
    needs: packaging
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/${{ vars.PYPI_PACKAGE_NAME }}
    steps:
      - name: Download artifacts
        if: ${{ !env.ACT }}
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish release distributions to PyPI
        if: ${{ !env.ACT }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
{% endraw %}
{#
vim: syntax=yaml.jinja
#}
