default_install_hook_types:
  - pre-commit
  - commit-msg

default_language_version:
  python: python3.13

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # catch mistakes
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-illegal-windows-names
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-vcs-permalinks
      - id: destroyed-symlinks
      - id: detect-private-key

      # whitespace
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [ "--fix=no" ]
      - id: trailing-whitespace

      # scripts
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

      # Python specifics
      - id: debug-statements
      - id: name-tests-test
        args: [ "--pytest-test-first" ]
        exclude: '^tests/(root_modules/|utils\.py)'

      # Data formats
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-yaml

{% if package_manager == 'uv' %}
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.8.3
    hooks:
      - id: uv-lock
{% elif package_manager == 'poetry' %}
  - repo: https://github.com/python-poetry/poetry
    rev: '2.1.3'
    hooks:
    - id: poetry-check
    - id: poetry-lock
{% endif %}

  # Use the version installed by poetry to have consistent versions between
  # manual, CI and pre-commit use.
  - repo: local
    hooks:
      - id: black
        name: black
{% if package_manager == 'uv' %}
        entry: uv run black
{% elif package_manager == 'poetry' %}
        entry: poetry run black
{% endif %}
        language: system
        types: [python]

      - id: isort
        name: isort
{% if package_manager == 'uv' %}
        entry: uv run isort
{% elif package_manager == 'poetry' %}
        entry: poetry run isort
{% endif %}
        language: system
        types: [python]

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        stages: [commit-msg]

# vim: ts=2:sw=2:et
